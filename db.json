{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/jane/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/jane/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/jane/source/css/gist.styl","path":"css/gist.styl","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/jane/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/jane/source/img/avator.jpg","path":"img/avator.jpg","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/jane/source/css/fonts/iconfont.eot","path":"css/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/jane/source/css/fonts/iconfont.svg","path":"css/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/jane/source/css/fonts/iconfont.woff","path":"css/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/jane/source/css/fonts/iconfont.ttf","path":"css/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/jane/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/jane/source/img/bg.jpg","path":"img/bg.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/jane/.gitignore","hash":"6993cdad70ce92d2734ccd7a0a944e539a79e738","modified":1537351323987},{"_id":"themes/jane/_config.yml","hash":"85e332f70a7e2a4788e35046fb85adf2e25cfb6a","modified":1537535723462},{"_id":"themes/jane/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1537351323990},{"_id":"themes/jane/LICENSE","hash":"1a684426fdd6827c8bdfc0f9444e49efb4296e2b","modified":1537351323993},{"_id":"themes/jane/package.json","hash":"b3a6b1669abf7f588ecdf4f9c261624f095f0fc4","modified":1537351324071},{"_id":"themes/jane/README.md","hash":"bc54c3451fca02ffd0648c359feb0ec7747cf776","modified":1537351323996},{"_id":"themes/jane/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1537351323793},{"_id":"themes/jane/.git/config","hash":"4f583082b922d048053318407ff0a64940cd7a33","modified":1537351323852},{"_id":"themes/jane/.git/index","hash":"e6b23b7bec79d80e78c95123b3bc3c2ae0026572","modified":1537595053688},{"_id":"themes/jane/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1537351319596},{"_id":"themes/jane/.git/packed-refs","hash":"f95fe6869645934db383dc8bd638bfd7602e5ca7","modified":1537351323680},{"_id":"themes/jane/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1537351324051},{"_id":"themes/jane/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1537351324054},{"_id":"themes/jane/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1537351324063},{"_id":"themes/jane/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1537351324065},{"_id":"themes/jane/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1537351324057},{"_id":"themes/jane/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1537351324076},{"_id":"themes/jane/layout/layout.ejs","hash":"66c9fa263a7af07159951efafc26acd87cb4bfeb","modified":1537534637858},{"_id":"themes/jane/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1537351324068},{"_id":"source/_posts/Codeforces 1051.md","hash":"e7aa770284a820094e673d02b550ff16c1e1c6db","modified":1537461541264},{"_id":"source/_posts/temp.md","hash":"883f6b5f83f92ac66ce2ce5eeb7cb00076c43819","modified":1537601763568},{"_id":"source/tags/index.md","hash":"1e6fd0bdd0c53464db15693d95ef4b7cdd2ede85","modified":1537357722671},{"_id":"source/_posts/Vue基础.md","hash":"0492edf63cfeaeb2b93c9fb3397d2871d9762e53","modified":1537352061273},{"_id":"source/_posts/Vue入门.md","hash":"243d241a1937973b7e692f9af766a27a8d26202f","modified":1537357510053},{"_id":"source/about/index.md","hash":"b4de8b95544bc579ddce06039359692b641fab54","modified":1537357913550},{"_id":"source/_posts/《UML精粹》读书笔记.md","hash":"2e50422367c00b5d9dfaf20d371df9ed0ea8f000","modified":1537371667123},{"_id":"source/_posts/杂谈.md","hash":"a0b0872f432ceb1c23671c934cb9a2b48945c69b","modified":1537371640582},{"_id":"themes/jane/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1537351319656},{"_id":"themes/jane/.git/logs/HEAD","hash":"14089e401276ebf7dd3c195c73e551bd8dc059ec","modified":1537351323822},{"_id":"themes/jane/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1537351319616},{"_id":"themes/jane/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1537351319628},{"_id":"themes/jane/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1537351319631},{"_id":"themes/jane/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1537351319621},{"_id":"themes/jane/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1537351319635},{"_id":"themes/jane/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1537351319625},{"_id":"themes/jane/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1537351319638},{"_id":"themes/jane/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1537351319644},{"_id":"themes/jane/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1537351319641},{"_id":"themes/jane/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1537351319651},{"_id":"themes/jane/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1537351319648},{"_id":"themes/jane/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1537351324012},{"_id":"themes/jane/layout/_partial/after-footer.ejs","hash":"65fe1ba392ad95407305ea053f8213c1258cf767","modified":1537351324009},{"_id":"themes/jane/layout/_partial/mobile-nav.ejs","hash":"9e7885bf769dad40a483d4f563e2d1c427f0c2f8","modified":1537536772646},{"_id":"themes/jane/layout/_partial/archive.ejs","hash":"5da8c722333e4ab1996d32d8e53a3f465916c23f","modified":1537351324016},{"_id":"themes/jane/layout/_partial/footer.ejs","hash":"87ca3e7555b09d611878cb94bab7337ca6758009","modified":1537371493026},{"_id":"themes/jane/layout/_partial/article.ejs","hash":"ef64d547d33eebd95151445edb566d7624123b11","modified":1537351324019},{"_id":"themes/jane/layout/_partial/head.ejs","hash":"bc918fd5ca891794dbd046db69adbaddbea3ea79","modified":1537372089629},{"_id":"themes/jane/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1537351324025},{"_id":"themes/jane/layout/_partial/sidebar.ejs","hash":"e76e3efd3f0f2de5064b931ef3c14c8be3357a47","modified":1537535637467},{"_id":"themes/jane/source/css/_extend.styl","hash":"dac4b803b5efe24ebc032abe9d8ae97b7dd6db02","modified":1537368783931},{"_id":"themes/jane/source/css/_variables.styl","hash":"4ec4d0613317ebf157d1437f6ce1f4ed40ae2998","modified":1537536357983},{"_id":"themes/jane/source/css/_variables_light.styl","hash":"2071dc2ddd84f3c58abd1b79ed9e0bcc2a3e8865","modified":1537361819658},{"_id":"themes/jane/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1537351324137},{"_id":"themes/jane/source/css/style.styl","hash":"60ef0ef075129383dbddd645cea5f155bdfb73b4","modified":1537534270983},{"_id":"themes/jane/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1537351324140},{"_id":"themes/jane/source/css/gist.styl","hash":"2dba5f6c1784ca4e9bd8b7ae34c6fda1fc4ce1d1","modified":1537351324130},{"_id":"themes/jane/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1537351324148},{"_id":"themes/jane/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1537351324142},{"_id":"themes/jane/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1537351324145},{"_id":"themes/jane/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1537351324150},{"_id":"themes/jane/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1537351324171},{"_id":"themes/jane/source/js/script.js","hash":"9dd4b5afb6bab9733aadc50c2c057fadb9377f33","modified":1537351324183},{"_id":"themes/jane/source/img/avator.jpg","hash":"160aad43169557b2afc5c2eba52cb6ee0e476997","modified":1537358284861},{"_id":"themes/jane/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1537351324175},{"_id":"themes/jane/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1537351324178},{"_id":"themes/jane/.git/objects/pack/pack-49d8cec13e87df308a485acf2283d7e2e4b6db6a.idx","hash":"43f252f9545dbc8d9614bc415516cd2f25eadda7","modified":1537351323527},{"_id":"themes/jane/.git/refs/heads/master","hash":"ef96c9654d9f367a607ee532e3cc136714450e72","modified":1537351323812},{"_id":"themes/jane/layout/_partial/post/category.ejs","hash":"0ca0588024565721c99b2156a3ea4ed8d820ef63","modified":1537351324036},{"_id":"themes/jane/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1537351324039},{"_id":"themes/jane/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1537351324045},{"_id":"themes/jane/source/css/_partial/comment.styl","hash":"43f908b307b1981f6157d6b4287c8f4dcc68dc56","modified":1537351324093},{"_id":"themes/jane/source/css/_partial/footer.styl","hash":"27c6138f807c828dcbe5b1de9eb22da2bafbefaa","modified":1537356924243},{"_id":"themes/jane/source/css/_partial/archive.styl","hash":"0118de2eb59fc8e15ea3c0e8a56d79476418529b","modified":1537367967490},{"_id":"themes/jane/layout/_partial/post/nav.ejs","hash":"eb000d9d8a9ebd9087046fa019abe1cddae8fd9c","modified":1537357343610},{"_id":"themes/jane/source/css/_partial/highlight.styl","hash":"488aa0b03314668a5456a0223c096dc17949e432","modified":1537531714305},{"_id":"themes/jane/source/css/_partial/mobile.styl","hash":"29ddb54e14c6e8859971acc01c6ae9f190e3010b","modified":1537538105075},{"_id":"themes/jane/source/css/_partial/article.styl","hash":"25611395168ee81c53192317f1e0ad23185ebf59","modified":1537370373787},{"_id":"themes/jane/source/css/_partial/sidebar.styl","hash":"0b007e4befa9379ac1fdfda5ffbbe39b28056acf","modified":1537372279615},{"_id":"themes/jane/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1537351324108},{"_id":"themes/jane/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1537351324111},{"_id":"themes/jane/source/css/fonts/iconfont.eot","hash":"6ba3575b2f32b5fdc491a5cbeff19ec1a2258ce0","modified":1537351324119},{"_id":"themes/jane/source/css/fonts/iconfont.svg","hash":"3a53b3b43e3f4422377cb2dfaa2b8c6983015f9b","modified":1537351324121},{"_id":"themes/jane/source/css/fonts/iconfont.woff","hash":"f105bd41ff679f1faa9bebb6f618426309c7033c","modified":1537351324127},{"_id":"themes/jane/source/css/fonts/iconfont.ttf","hash":"0936fdc72603dd9adc5a71ae46f8c00bcba7e629","modified":1537351324124},{"_id":"themes/jane/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1537351324158},{"_id":"themes/jane/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1537351324155},{"_id":"themes/jane/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1537351324163},{"_id":"themes/jane/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1537351324161},{"_id":"themes/jane/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1537351324169},{"_id":"themes/jane/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1537351324166},{"_id":"themes/jane/.git/objects/pack/pack-49d8cec13e87df308a485acf2283d7e2e4b6db6a.pack","hash":"14c58e61255776d617b160ff3502209eff4fdea9","modified":1537351323543},{"_id":"themes/jane/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1537351323728},{"_id":"themes/jane/.git/logs/refs/heads/master","hash":"14089e401276ebf7dd3c195c73e551bd8dc059ec","modified":1537351323829},{"_id":"themes/jane/.git/logs/refs/remotes/origin/HEAD","hash":"14089e401276ebf7dd3c195c73e551bd8dc059ec","modified":1537351323727},{"_id":"themes/jane/source/img/bg.jpg","hash":"b37bb718b643a1fc30590b73b0de79ba1daf5691","modified":1537535756912}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2018-09-19T11:47:59.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-09-19 19:47:59\ntype: \"tags\"\n---\n","updated":"2018-09-19T11:48:42.671Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjmd4j97h0001tovaghbr2m1t","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2018-09-19T11:50:36.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-09-19 19:50:36\ntype: \"about\"\n---\n","updated":"2018-09-19T11:51:53.550Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjmd4j97l0003tovaelpxn4wk","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"解决npm install -g not found","date":"2018-09-22T06:29:36.000Z","_content":"\n## 场景\n\n```shell\n# npm install hexo -g\n```\n\n使用-g命令安装npm全局包，之后就可以在命令行中全局使用。\n\n## 错误\n\n安装成功后提示下面的错误：\n\n```shell\n# hexo\n-bash: hexo: command not found\n```\n\n## 分析\n\n发现hexo并不在`path`目录下：\n\n```shell\n# which hexo\n/usr/bin/which: no hexo in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)\n```\n\n以hexo为例分析`npm install -g`的安装过程：\n\n1. npm将hexo安装在`/usr/local/lib/node_modules/hexo`目录下\n2. 将hexo可执行文件`/usr/local/lib/node_modules/hexo/bin/hexo`链接到`/usr/local/bin/hexo`\n\n那`/usr/local/bin`在`path`中却找不到hexo呢？\n\n因为npm实际上是安装在`prefix`这个目录下，而不是`/usr/local`，如果`prefix`设置错误就找不到了。\n\n## 验证\n\n```shell\nnpm config get prefix\n/data/app/janny-hexo\n```\n\n```shell\necho $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/usr/local/bin/lib\n```\n\n## 解决\n\n1. 修改`prefix`【建议】\n\n```shell\nnpm config set prefix /usr/local\nnpm install hexo -g\n```\n\n2. 或修改`path`\n\n```shell\nexport PATH=$PATH:/data/app/janny-hexo/bin\nnpm install hexo -g\n```\n","source":"_posts/temp.md","raw":"---\ntitle: 解决npm install -g not found\ndate: 2018-09-22 14:29:36\ntags:\n---\n\n## 场景\n\n```shell\n# npm install hexo -g\n```\n\n使用-g命令安装npm全局包，之后就可以在命令行中全局使用。\n\n## 错误\n\n安装成功后提示下面的错误：\n\n```shell\n# hexo\n-bash: hexo: command not found\n```\n\n## 分析\n\n发现hexo并不在`path`目录下：\n\n```shell\n# which hexo\n/usr/bin/which: no hexo in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)\n```\n\n以hexo为例分析`npm install -g`的安装过程：\n\n1. npm将hexo安装在`/usr/local/lib/node_modules/hexo`目录下\n2. 将hexo可执行文件`/usr/local/lib/node_modules/hexo/bin/hexo`链接到`/usr/local/bin/hexo`\n\n那`/usr/local/bin`在`path`中却找不到hexo呢？\n\n因为npm实际上是安装在`prefix`这个目录下，而不是`/usr/local`，如果`prefix`设置错误就找不到了。\n\n## 验证\n\n```shell\nnpm config get prefix\n/data/app/janny-hexo\n```\n\n```shell\necho $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/usr/local/bin/lib\n```\n\n## 解决\n\n1. 修改`prefix`【建议】\n\n```shell\nnpm config set prefix /usr/local\nnpm install hexo -g\n```\n\n2. 或修改`path`\n\n```shell\nexport PATH=$PATH:/data/app/janny-hexo/bin\nnpm install hexo -g\n```\n","slug":"temp","published":1,"updated":"2018-09-22T07:36:03.568Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmd4j97c0000tovagq4kwcbw","content":"<h2 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> npm install hexo -g</span><br></pre></td></tr></table></figure>\n<p>使用-g命令安装npm全局包，之后就可以在命令行中全局使用。</p>\n<h2 id=\"错误\"><a href=\"#错误\" class=\"headerlink\" title=\"错误\"></a>错误</h2><p>安装成功后提示下面的错误：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> hexo</span><br><span class=\"line\">-bash: hexo: command not found</span><br></pre></td></tr></table></figure>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>发现hexo并不在<code>path</code>目录下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> which hexo</span><br><span class=\"line\">/usr/bin/which: no hexo in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)</span><br></pre></td></tr></table></figure>\n<p>以hexo为例分析<code>npm install -g</code>的安装过程：</p>\n<ol>\n<li>npm将hexo安装在<code>/usr/local/lib/node_modules/hexo</code>目录下</li>\n<li>将hexo可执行文件<code>/usr/local/lib/node_modules/hexo/bin/hexo</code>链接到<code>/usr/local/bin/hexo</code></li>\n</ol>\n<p>那<code>/usr/local/bin</code>在<code>path</code>中却找不到hexo呢？</p>\n<p>因为npm实际上是安装在<code>prefix</code>这个目录下，而不是<code>/usr/local</code>，如果<code>prefix</code>设置错误就找不到了。</p>\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config get prefix</span><br><span class=\"line\">/data/app/janny-hexo</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo $PATH</span><br><span class=\"line\">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/usr/local/bin/lib</span><br></pre></td></tr></table></figure>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><ol>\n<li>修改<code>prefix</code>【建议】</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set prefix /usr/local</span><br><span class=\"line\">npm install hexo -g</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>或修改<code>path</code></li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=$PATH:/data/app/janny-hexo/bin</span><br><span class=\"line\">npm install hexo -g</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> npm install hexo -g</span><br></pre></td></tr></table></figure>\n<p>使用-g命令安装npm全局包，之后就可以在命令行中全局使用。</p>\n<h2 id=\"错误\"><a href=\"#错误\" class=\"headerlink\" title=\"错误\"></a>错误</h2><p>安装成功后提示下面的错误：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> hexo</span><br><span class=\"line\">-bash: hexo: command not found</span><br></pre></td></tr></table></figure>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>发现hexo并不在<code>path</code>目录下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> which hexo</span><br><span class=\"line\">/usr/bin/which: no hexo in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)</span><br></pre></td></tr></table></figure>\n<p>以hexo为例分析<code>npm install -g</code>的安装过程：</p>\n<ol>\n<li>npm将hexo安装在<code>/usr/local/lib/node_modules/hexo</code>目录下</li>\n<li>将hexo可执行文件<code>/usr/local/lib/node_modules/hexo/bin/hexo</code>链接到<code>/usr/local/bin/hexo</code></li>\n</ol>\n<p>那<code>/usr/local/bin</code>在<code>path</code>中却找不到hexo呢？</p>\n<p>因为npm实际上是安装在<code>prefix</code>这个目录下，而不是<code>/usr/local</code>，如果<code>prefix</code>设置错误就找不到了。</p>\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config get prefix</span><br><span class=\"line\">/data/app/janny-hexo</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo $PATH</span><br><span class=\"line\">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/usr/local/bin/lib</span><br></pre></td></tr></table></figure>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><ol>\n<li>修改<code>prefix</code>【建议】</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set prefix /usr/local</span><br><span class=\"line\">npm install hexo -g</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>或修改<code>path</code></li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=$PATH:/data/app/janny-hexo/bin</span><br><span class=\"line\">npm install hexo -g</span><br></pre></td></tr></table></figure>\n"},{"layout":"educational","title":"Codeforces 1051","date":"2018-09-20T16:35:24.000Z","_content":"\n## A\n\n```C++\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint T;\nstring s;\n\nvoid rps(int t1, int t2){\n\tt1--; t2--;\n\tfor(int i = 0; i < s.size(); i++){\n\t\tchar c = s[i];\n\t\tif(0 == t1 && c >= 'a' && c <= 'z'){\n\t\t\ts[i] = 1 == t2 ? 'A' : 2 == t2 ? '0' : s[i];\n\t\t}\n\t\telse if(1 == t1 && c >= 'A' && c <= 'Z'){\n\t\t\ts[i] = 0 == t2 ? 'a' : 2 == t2 ? '0' : s[i];\n\t\t}\n\t\telse if(2 == t1 && c >= '0' && c <= '9'){\n\t\t\ts[i] = 0 == t2 ? 'a' : 1 == t2 ? 'A' : s[i];\n\t\t}\n\t\telse{\n\t\t\tcontinue;\n\t\t}\n\t\tbreak;\n\t}\n}\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin >> T;\n\twhile(T--){\n\t\tint c1 = 0, c2 = 0, c3 = 0;\n\t\tcin >> s;\n\t\tint L = s.size();\n\t\tfor(int i = 0; i < L; i++){\n\t\t\tif(s[i] >= 'a' && s[i] <= 'z'){\n\t\t\t\tc1++;\n\t\t\t}\n\t\t\telse if(s[i] >= 'A' && s[i] <= 'Z'){\n\t\t\t\tc2++;\n\t\t\t}\n\t\t\telse if(s[i] >= '0' && s[i] <= '9'){\n\t\t\t\tc3++;\n\t\t\t}\n\t\t}\n\n\t\tif(c1 && c2 && c3){\n\t\t}\n\t\telse if(c1 && c2){\n\t\t\tif(c2 >= c1) rps(2, 3); else rps(1, 3);\n\t\t}\n\t\telse if(c1 && c3){\n\t\t\tif(c3 >= c1) rps(3, 2); else rps(1, 2);\n\t\t}\n\t\telse if(c2 && c3){\n\t\t\tif(c2 >= c3) rps(2, 1); else rps(3, 1);\n\t\t}\n\t\telse if(c1){\n\t\t\trps(1, 2); rps(1, 3);\n\t\t}\n\t\telse if(c2){\n\t\t\trps(2, 1); rps(2, 3);\n\t\t}\n\t\telse if(c3){\n\t\t\trps(3, 2); rps(3, 1);\n\t\t}\n\t\tcout << s << endl;\n\t}\n\n\treturn 0;\n}\n```\n\n## B\n\n```C++\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nlong long l, r;\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin >> l >> r;\n\tcout << \"YES\\n\";\n\tfor(long long i = l; i <= r; i += 2){\n\t\tcout << i << \" \" << i+1 << endl;\n\t}\n\n\treturn 0;\n}\n```\n\n## C\n\n```C++\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n;\nint s[105];\nint stat[105];\nbool nice[105];\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin >> n;\n\tfor(int i = 0; i < n; i++){\n\t\tcin >> s[i];\n\t\tstat[s[i]]++;\n\t\tnice[s[i]] = stat[s[i]] == 1;\n\t}\n\n\tint nicecnt = 0;\n\tfor(int i = 0; i <= 100; i++){\n\t\tif(nice[i]) nicecnt++;\n\t}\n\n\tint index_to_b = -1;\n\n\tif(nicecnt % 2 != 0){\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif(!nice[s[i]] && stat[s[i]] > 2){\n\t\t\t\tindex_to_b = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(index_to_b == -1){\n\t\t\tcout << \"NO\";\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tcout << \"YES\" << endl;\n\tint index_nice = 0;\n\tfor(int i = 0; i < n; i++){\n\t\tif(i == index_to_b){\n\t\t\tcout << 'B';\n\t\t}\n\t\telse if(!nice[s[i]]){\n\t\t\tcout << 'A';\n\t\t}\n\t\telse if(nice[s[i]]){\n\t\t\tif(index_nice < nicecnt/2){\n\t\t\t\tcout << 'B';\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << 'A';\n\t\t\t}\n\t\t\tindex_nice++;\n\t\t}\n\t}\n\n\n\treturn 0;\n}\n```\n\n## D\n\n```C++\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, K;\nlong long dp[1005][2018][4];\nlong long mod = 998244353;\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin >> n >> K;\n\n\tdp[1][1][0] = 1; dp[1][1][1] = 1;\n\tdp[1][2][2] = 1; dp[1][2][3] = 1;\n\tfor(int i = 2; i <= n; i++){\n\t\tfor(int k = 1; k <= K && k <= 2*i; k++){\n\t\t\tdp[i][k][0] = dp[i-1][k][0] + dp[i-1][k-1][1] + dp[i-1][k-1][2] + dp[i-1][k-1][3];\n\t\t\tdp[i][k][1] = dp[i-1][k-1][0] + dp[i-1][k][1] + dp[i-1][k-1][2] + dp[i-1][k-1][3];\n\t\t\tdp[i][k][2] = dp[i-1][k-1][0] + dp[i-1][k-1][1] + dp[i-1][k][2];\n\t\t\tdp[i][k][3] = dp[i-1][k-1][0] + dp[i-1][k-1][1] + dp[i-1][k][3];\n\t\t\tif(k >= 2){\n\t\t\t\tdp[i][k][2] += dp[i-1][k-2][3];\n\t\t\t\tdp[i][k][3] += dp[i-1][k-2][2];\n\t\t\t}\n\t\t\tdp[i][k][0] %= mod; dp[i][k][1] %= mod;\n\t\t\tdp[i][k][2] %= mod; dp[i][k][3] %= mod;\n\t\t}\n\t}\n\n\tlong long res = 0;\n\tfor(int i = 0; i < 4; i++){\n\t\tres += dp[n][K][i];\n\t}\n\tres %= mod;\n\n\tcout << res;\n\n\treturn 0;\n}\n\n```\n","source":"_posts/Codeforces 1051.md","raw":"---\nlayout: educational\ntitle: Codeforces 1051\ndate: 2018-09-21 00:35:24\ntags:\n---\n\n## A\n\n```C++\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint T;\nstring s;\n\nvoid rps(int t1, int t2){\n\tt1--; t2--;\n\tfor(int i = 0; i < s.size(); i++){\n\t\tchar c = s[i];\n\t\tif(0 == t1 && c >= 'a' && c <= 'z'){\n\t\t\ts[i] = 1 == t2 ? 'A' : 2 == t2 ? '0' : s[i];\n\t\t}\n\t\telse if(1 == t1 && c >= 'A' && c <= 'Z'){\n\t\t\ts[i] = 0 == t2 ? 'a' : 2 == t2 ? '0' : s[i];\n\t\t}\n\t\telse if(2 == t1 && c >= '0' && c <= '9'){\n\t\t\ts[i] = 0 == t2 ? 'a' : 1 == t2 ? 'A' : s[i];\n\t\t}\n\t\telse{\n\t\t\tcontinue;\n\t\t}\n\t\tbreak;\n\t}\n}\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin >> T;\n\twhile(T--){\n\t\tint c1 = 0, c2 = 0, c3 = 0;\n\t\tcin >> s;\n\t\tint L = s.size();\n\t\tfor(int i = 0; i < L; i++){\n\t\t\tif(s[i] >= 'a' && s[i] <= 'z'){\n\t\t\t\tc1++;\n\t\t\t}\n\t\t\telse if(s[i] >= 'A' && s[i] <= 'Z'){\n\t\t\t\tc2++;\n\t\t\t}\n\t\t\telse if(s[i] >= '0' && s[i] <= '9'){\n\t\t\t\tc3++;\n\t\t\t}\n\t\t}\n\n\t\tif(c1 && c2 && c3){\n\t\t}\n\t\telse if(c1 && c2){\n\t\t\tif(c2 >= c1) rps(2, 3); else rps(1, 3);\n\t\t}\n\t\telse if(c1 && c3){\n\t\t\tif(c3 >= c1) rps(3, 2); else rps(1, 2);\n\t\t}\n\t\telse if(c2 && c3){\n\t\t\tif(c2 >= c3) rps(2, 1); else rps(3, 1);\n\t\t}\n\t\telse if(c1){\n\t\t\trps(1, 2); rps(1, 3);\n\t\t}\n\t\telse if(c2){\n\t\t\trps(2, 1); rps(2, 3);\n\t\t}\n\t\telse if(c3){\n\t\t\trps(3, 2); rps(3, 1);\n\t\t}\n\t\tcout << s << endl;\n\t}\n\n\treturn 0;\n}\n```\n\n## B\n\n```C++\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nlong long l, r;\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin >> l >> r;\n\tcout << \"YES\\n\";\n\tfor(long long i = l; i <= r; i += 2){\n\t\tcout << i << \" \" << i+1 << endl;\n\t}\n\n\treturn 0;\n}\n```\n\n## C\n\n```C++\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n;\nint s[105];\nint stat[105];\nbool nice[105];\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin >> n;\n\tfor(int i = 0; i < n; i++){\n\t\tcin >> s[i];\n\t\tstat[s[i]]++;\n\t\tnice[s[i]] = stat[s[i]] == 1;\n\t}\n\n\tint nicecnt = 0;\n\tfor(int i = 0; i <= 100; i++){\n\t\tif(nice[i]) nicecnt++;\n\t}\n\n\tint index_to_b = -1;\n\n\tif(nicecnt % 2 != 0){\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif(!nice[s[i]] && stat[s[i]] > 2){\n\t\t\t\tindex_to_b = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(index_to_b == -1){\n\t\t\tcout << \"NO\";\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tcout << \"YES\" << endl;\n\tint index_nice = 0;\n\tfor(int i = 0; i < n; i++){\n\t\tif(i == index_to_b){\n\t\t\tcout << 'B';\n\t\t}\n\t\telse if(!nice[s[i]]){\n\t\t\tcout << 'A';\n\t\t}\n\t\telse if(nice[s[i]]){\n\t\t\tif(index_nice < nicecnt/2){\n\t\t\t\tcout << 'B';\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << 'A';\n\t\t\t}\n\t\t\tindex_nice++;\n\t\t}\n\t}\n\n\n\treturn 0;\n}\n```\n\n## D\n\n```C++\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, K;\nlong long dp[1005][2018][4];\nlong long mod = 998244353;\n\nint main(){\n\tios::sync_with_stdio(0);\n\tcin >> n >> K;\n\n\tdp[1][1][0] = 1; dp[1][1][1] = 1;\n\tdp[1][2][2] = 1; dp[1][2][3] = 1;\n\tfor(int i = 2; i <= n; i++){\n\t\tfor(int k = 1; k <= K && k <= 2*i; k++){\n\t\t\tdp[i][k][0] = dp[i-1][k][0] + dp[i-1][k-1][1] + dp[i-1][k-1][2] + dp[i-1][k-1][3];\n\t\t\tdp[i][k][1] = dp[i-1][k-1][0] + dp[i-1][k][1] + dp[i-1][k-1][2] + dp[i-1][k-1][3];\n\t\t\tdp[i][k][2] = dp[i-1][k-1][0] + dp[i-1][k-1][1] + dp[i-1][k][2];\n\t\t\tdp[i][k][3] = dp[i-1][k-1][0] + dp[i-1][k-1][1] + dp[i-1][k][3];\n\t\t\tif(k >= 2){\n\t\t\t\tdp[i][k][2] += dp[i-1][k-2][3];\n\t\t\t\tdp[i][k][3] += dp[i-1][k-2][2];\n\t\t\t}\n\t\t\tdp[i][k][0] %= mod; dp[i][k][1] %= mod;\n\t\t\tdp[i][k][2] %= mod; dp[i][k][3] %= mod;\n\t\t}\n\t}\n\n\tlong long res = 0;\n\tfor(int i = 0; i < 4; i++){\n\t\tres += dp[n][K][i];\n\t}\n\tres %= mod;\n\n\tcout << res;\n\n\treturn 0;\n}\n\n```\n","slug":"Codeforces 1051","published":1,"updated":"2018-09-20T16:39:01.264Z","comments":1,"photos":[],"link":"","_id":"cjmd4j97j0002tovapm2ckh17","content":"<h2 id=\"A\"><a href=\"#A\" class=\"headerlink\" title=\"A\"></a>A</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> T;</span><br><span class=\"line\"><span class=\"built_in\">string</span> s;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">rps</span><span class=\"params\">(<span class=\"keyword\">int</span> t1, <span class=\"keyword\">int</span> t2)</span></span>&#123;</span><br><span class=\"line\">\tt1--; t2--;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.size(); i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">char</span> c = s[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"number\">0</span> == t1 &amp;&amp; c &gt;= <span class=\"string\">'a'</span> &amp;&amp; c &lt;= <span class=\"string\">'z'</span>)&#123;</span><br><span class=\"line\">\t\t\ts[i] = <span class=\"number\">1</span> == t2 ? <span class=\"string\">'A'</span> : <span class=\"number\">2</span> == t2 ? <span class=\"string\">'0'</span> : s[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"number\">1</span> == t1 &amp;&amp; c &gt;= <span class=\"string\">'A'</span> &amp;&amp; c &lt;= <span class=\"string\">'Z'</span>)&#123;</span><br><span class=\"line\">\t\t\ts[i] = <span class=\"number\">0</span> == t2 ? <span class=\"string\">'a'</span> : <span class=\"number\">2</span> == t2 ? <span class=\"string\">'0'</span> : s[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"number\">2</span> == t1 &amp;&amp; c &gt;= <span class=\"string\">'0'</span> &amp;&amp; c &lt;= <span class=\"string\">'9'</span>)&#123;</span><br><span class=\"line\">\t\t\ts[i] = <span class=\"number\">0</span> == t2 ? <span class=\"string\">'a'</span> : <span class=\"number\">1</span> == t2 ? <span class=\"string\">'A'</span> : s[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tios::sync_with_stdio(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(T--)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> c1 = <span class=\"number\">0</span>, c2 = <span class=\"number\">0</span>, c3 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; s;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> L = s.size();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; L; i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(s[i] &gt;= <span class=\"string\">'a'</span> &amp;&amp; s[i] &lt;= <span class=\"string\">'z'</span>)&#123;</span><br><span class=\"line\">\t\t\t\tc1++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s[i] &gt;= <span class=\"string\">'A'</span> &amp;&amp; s[i] &lt;= <span class=\"string\">'Z'</span>)&#123;</span><br><span class=\"line\">\t\t\t\tc2++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s[i] &gt;= <span class=\"string\">'0'</span> &amp;&amp; s[i] &lt;= <span class=\"string\">'9'</span>)&#123;</span><br><span class=\"line\">\t\t\t\tc3++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c1 &amp;&amp; c2 &amp;&amp; c3)&#123;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c1 &amp;&amp; c2)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c2 &gt;= c1) rps(<span class=\"number\">2</span>, <span class=\"number\">3</span>); <span class=\"keyword\">else</span> rps(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c1 &amp;&amp; c3)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c3 &gt;= c1) rps(<span class=\"number\">3</span>, <span class=\"number\">2</span>); <span class=\"keyword\">else</span> rps(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c2 &amp;&amp; c3)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c2 &gt;= c3) rps(<span class=\"number\">2</span>, <span class=\"number\">1</span>); <span class=\"keyword\">else</span> rps(<span class=\"number\">3</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c1)&#123;</span><br><span class=\"line\">\t\t\trps(<span class=\"number\">1</span>, <span class=\"number\">2</span>); rps(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c2)&#123;</span><br><span class=\"line\">\t\t\trps(<span class=\"number\">2</span>, <span class=\"number\">1</span>); rps(<span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c3)&#123;</span><br><span class=\"line\">\t\t\trps(<span class=\"number\">3</span>, <span class=\"number\">2</span>); rps(<span class=\"number\">3</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; s &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"B\"><a href=\"#B\" class=\"headerlink\" title=\"B\"></a>B</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> l, r;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tios::sync_with_stdio(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"YES\\n\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> i = l; i &lt;= r; i += <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; i &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; i+<span class=\"number\">1</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C\"></a>C</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> s[<span class=\"number\">105</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> stat[<span class=\"number\">105</span>];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> nice[<span class=\"number\">105</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tios::sync_with_stdio(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; s[i];</span><br><span class=\"line\">\t\tstat[s[i]]++;</span><br><span class=\"line\">\t\tnice[s[i]] = stat[s[i]] == <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> nicecnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">100</span>; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(nice[i]) nicecnt++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> index_to_b = <span class=\"number\">-1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(nicecnt % <span class=\"number\">2</span> != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!nice[s[i]] &amp;&amp; stat[s[i]] &gt; <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\tindex_to_b = i;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(index_to_b == <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"NO\"</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"YES\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> index_nice = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i == index_to_b)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'B'</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!nice[s[i]])&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'A'</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(nice[s[i]])&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(index_nice &lt; nicecnt/<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'B'</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'A'</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tindex_nice++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"D\"><a href=\"#D\" class=\"headerlink\" title=\"D\"></a>D</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n, K;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> dp[<span class=\"number\">1005</span>][<span class=\"number\">2018</span>][<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod = <span class=\"number\">998244353</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tios::sync_with_stdio(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; K;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>; dp[<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">2</span>] = <span class=\"number\">1</span>; dp[<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">3</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">1</span>; k &lt;= K &amp;&amp; k &lt;= <span class=\"number\">2</span>*i; k++)&#123;</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">0</span>] = dp[i<span class=\"number\">-1</span>][k][<span class=\"number\">0</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">1</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">2</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">1</span>] = dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">0</span>] + dp[i<span class=\"number\">-1</span>][k][<span class=\"number\">1</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">2</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">2</span>] = dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">0</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">1</span>] + dp[i<span class=\"number\">-1</span>][k][<span class=\"number\">2</span>];</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">3</span>] = dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">0</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">1</span>] + dp[i<span class=\"number\">-1</span>][k][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(k &gt;= <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\tdp[i][k][<span class=\"number\">2</span>] += dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-2</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t\t\tdp[i][k][<span class=\"number\">3</span>] += dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-2</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">0</span>] %= mod; dp[i][k][<span class=\"number\">1</span>] %= mod;</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">2</span>] %= mod; dp[i][k][<span class=\"number\">3</span>] %= mod;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)&#123;</span><br><span class=\"line\">\t\tres += dp[n][K][i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tres %= mod;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; res;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"A\"><a href=\"#A\" class=\"headerlink\" title=\"A\"></a>A</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> T;</span><br><span class=\"line\"><span class=\"built_in\">string</span> s;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">rps</span><span class=\"params\">(<span class=\"keyword\">int</span> t1, <span class=\"keyword\">int</span> t2)</span></span>&#123;</span><br><span class=\"line\">\tt1--; t2--;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.size(); i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">char</span> c = s[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"number\">0</span> == t1 &amp;&amp; c &gt;= <span class=\"string\">'a'</span> &amp;&amp; c &lt;= <span class=\"string\">'z'</span>)&#123;</span><br><span class=\"line\">\t\t\ts[i] = <span class=\"number\">1</span> == t2 ? <span class=\"string\">'A'</span> : <span class=\"number\">2</span> == t2 ? <span class=\"string\">'0'</span> : s[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"number\">1</span> == t1 &amp;&amp; c &gt;= <span class=\"string\">'A'</span> &amp;&amp; c &lt;= <span class=\"string\">'Z'</span>)&#123;</span><br><span class=\"line\">\t\t\ts[i] = <span class=\"number\">0</span> == t2 ? <span class=\"string\">'a'</span> : <span class=\"number\">2</span> == t2 ? <span class=\"string\">'0'</span> : s[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"number\">2</span> == t1 &amp;&amp; c &gt;= <span class=\"string\">'0'</span> &amp;&amp; c &lt;= <span class=\"string\">'9'</span>)&#123;</span><br><span class=\"line\">\t\t\ts[i] = <span class=\"number\">0</span> == t2 ? <span class=\"string\">'a'</span> : <span class=\"number\">1</span> == t2 ? <span class=\"string\">'A'</span> : s[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tios::sync_with_stdio(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(T--)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> c1 = <span class=\"number\">0</span>, c2 = <span class=\"number\">0</span>, c3 = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; s;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> L = s.size();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; L; i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(s[i] &gt;= <span class=\"string\">'a'</span> &amp;&amp; s[i] &lt;= <span class=\"string\">'z'</span>)&#123;</span><br><span class=\"line\">\t\t\t\tc1++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s[i] &gt;= <span class=\"string\">'A'</span> &amp;&amp; s[i] &lt;= <span class=\"string\">'Z'</span>)&#123;</span><br><span class=\"line\">\t\t\t\tc2++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s[i] &gt;= <span class=\"string\">'0'</span> &amp;&amp; s[i] &lt;= <span class=\"string\">'9'</span>)&#123;</span><br><span class=\"line\">\t\t\t\tc3++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(c1 &amp;&amp; c2 &amp;&amp; c3)&#123;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c1 &amp;&amp; c2)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c2 &gt;= c1) rps(<span class=\"number\">2</span>, <span class=\"number\">3</span>); <span class=\"keyword\">else</span> rps(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c1 &amp;&amp; c3)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c3 &gt;= c1) rps(<span class=\"number\">3</span>, <span class=\"number\">2</span>); <span class=\"keyword\">else</span> rps(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c2 &amp;&amp; c3)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(c2 &gt;= c3) rps(<span class=\"number\">2</span>, <span class=\"number\">1</span>); <span class=\"keyword\">else</span> rps(<span class=\"number\">3</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c1)&#123;</span><br><span class=\"line\">\t\t\trps(<span class=\"number\">1</span>, <span class=\"number\">2</span>); rps(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c2)&#123;</span><br><span class=\"line\">\t\t\trps(<span class=\"number\">2</span>, <span class=\"number\">1</span>); rps(<span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c3)&#123;</span><br><span class=\"line\">\t\t\trps(<span class=\"number\">3</span>, <span class=\"number\">2</span>); rps(<span class=\"number\">3</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; s &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"B\"><a href=\"#B\" class=\"headerlink\" title=\"B\"></a>B</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> l, r;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tios::sync_with_stdio(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"YES\\n\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> i = l; i &lt;= r; i += <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; i &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; i+<span class=\"number\">1</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C\"></a>C</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> s[<span class=\"number\">105</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> stat[<span class=\"number\">105</span>];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> nice[<span class=\"number\">105</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tios::sync_with_stdio(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; s[i];</span><br><span class=\"line\">\t\tstat[s[i]]++;</span><br><span class=\"line\">\t\tnice[s[i]] = stat[s[i]] == <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> nicecnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">100</span>; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(nice[i]) nicecnt++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> index_to_b = <span class=\"number\">-1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(nicecnt % <span class=\"number\">2</span> != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!nice[s[i]] &amp;&amp; stat[s[i]] &gt; <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\tindex_to_b = i;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(index_to_b == <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"NO\"</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"YES\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> index_nice = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i == index_to_b)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'B'</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!nice[s[i]])&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'A'</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(nice[s[i]])&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(index_nice &lt; nicecnt/<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'B'</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'A'</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tindex_nice++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"D\"><a href=\"#D\" class=\"headerlink\" title=\"D\"></a>D</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n, K;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> dp[<span class=\"number\">1005</span>][<span class=\"number\">2018</span>][<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> mod = <span class=\"number\">998244353</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tios::sync_with_stdio(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; K;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"number\">1</span>; dp[<span class=\"number\">1</span>][<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tdp[<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">2</span>] = <span class=\"number\">1</span>; dp[<span class=\"number\">1</span>][<span class=\"number\">2</span>][<span class=\"number\">3</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">1</span>; k &lt;= K &amp;&amp; k &lt;= <span class=\"number\">2</span>*i; k++)&#123;</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">0</span>] = dp[i<span class=\"number\">-1</span>][k][<span class=\"number\">0</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">1</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">2</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">1</span>] = dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">0</span>] + dp[i<span class=\"number\">-1</span>][k][<span class=\"number\">1</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">2</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">2</span>] = dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">0</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">1</span>] + dp[i<span class=\"number\">-1</span>][k][<span class=\"number\">2</span>];</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">3</span>] = dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">0</span>] + dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-1</span>][<span class=\"number\">1</span>] + dp[i<span class=\"number\">-1</span>][k][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(k &gt;= <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\tdp[i][k][<span class=\"number\">2</span>] += dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-2</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t\t\tdp[i][k][<span class=\"number\">3</span>] += dp[i<span class=\"number\">-1</span>][k<span class=\"number\">-2</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">0</span>] %= mod; dp[i][k][<span class=\"number\">1</span>] %= mod;</span><br><span class=\"line\">\t\t\tdp[i][k][<span class=\"number\">2</span>] %= mod; dp[i][k][<span class=\"number\">3</span>] %= mod;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)&#123;</span><br><span class=\"line\">\t\tres += dp[n][K][i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tres %= mod;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; res;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Vue基础","date":"2018-09-12T16:00:00.000Z","_content":"\nViewModel 使用Vue实例联系起HTML元素(View)和data(Model)\n响应式 当data变化后会立即同步变化View\n组件 所有视图可以视为以Vue实例为根的组件树，可以嵌套层叠，通过CSS控制布局和样式。封装为组件可提高抽象层次，方便复用\n\n## 模板语法\n\n```\n{{ rawHtml }}\n<span v-html=\"rawHtml\"></span>\nv-bind:id=\"dynamicId\"\nv-bind:disabled=\"isButtonDisabled\"\nv-bind:id=\"'list-' + id\"\nv-if=\"seen\"\nv-on:click=\"doSomething\"\n\nv-bind:href=\"url\"  缩写为  :href=\"url\"\nv-on:click=\"doSomething\"  缩写为  @click=\"doSomething\"\n```\n\n## 计算属性\n\n```\n// {{ message.split('').reverse().join('') }}\n{{ reversedMessage }}\nvar vm = new Vue({\n  el: '#example',\n  data: {\n    message: 'Hello'\n  },\n  computed: {\n    // 计算属性的 getter\n    reversedMessage: function () {\n      // `this` 指向 vm 实例\n      return this.message.split('').reverse().join('')\n    }\n  }\n})\n```\n\n计算属性和函数区别：计算属性是基于它们的依赖进行缓存的。只在相关依赖发生改变时它们才会重新求值。这就意味着只要 message 还没有发生改变，多次访问 reversedMessage 计算属性会立即返回之前的计算结果，而不必再次执行函数。\n\n计算属性setter\n\n```\ncomputed: {\n  fullName: {\n    // getter\n    get: function () {\n      return this.firstName + ' ' + this.lastName\n    },\n    // setter\n    set: function (newValue) {\n      var names = newValue.split(' ')\n      this.firstName = names[0]\n      this.lastName = names[names.length - 1]\n    }\n  }\n}\n```\n\n## Class 与 Style\n\n```\n<div class=\"static\"\n     v-bind:class=\"{ active: isActive, 'text-danger': hasError }\">\n</div>\n和如下 data：\n\ndata: {\n  isActive: true,\n  hasError: false\n}\n结果渲染为：\n\n<div class=\"static active\"></div>\n\n我们也可以在这里绑定一个返回对象的计算属性。这是一个常用且强大的模式：\n\n<div v-bind:class=\"classObject\"></div>\ndata: {\n  isActive: true,\n  error: null\n},\ncomputed: {\n  classObject: function () {\n    return {\n      active: this.isActive && !this.error,\n      'text-danger': this.error && this.error.type === 'fatal'\n    }\n  }\n}\n\n直接绑定到一个样式对象通常更好，这会让模板更清晰：\n\n<div v-bind:style=\"styleObject\"></div>\ndata: {\n  styleObject: {\n    color: 'red',\n    fontSize: '13px'\n  }\n}\n同样的，对象语法常常结合返回对象的计算属性使用。\n\n```\n","source":"_posts/Vue基础.md","raw":"---\ntitle: Vue基础\ndate: 2018-09-13\ntags:\n---\n\nViewModel 使用Vue实例联系起HTML元素(View)和data(Model)\n响应式 当data变化后会立即同步变化View\n组件 所有视图可以视为以Vue实例为根的组件树，可以嵌套层叠，通过CSS控制布局和样式。封装为组件可提高抽象层次，方便复用\n\n## 模板语法\n\n```\n{{ rawHtml }}\n<span v-html=\"rawHtml\"></span>\nv-bind:id=\"dynamicId\"\nv-bind:disabled=\"isButtonDisabled\"\nv-bind:id=\"'list-' + id\"\nv-if=\"seen\"\nv-on:click=\"doSomething\"\n\nv-bind:href=\"url\"  缩写为  :href=\"url\"\nv-on:click=\"doSomething\"  缩写为  @click=\"doSomething\"\n```\n\n## 计算属性\n\n```\n// {{ message.split('').reverse().join('') }}\n{{ reversedMessage }}\nvar vm = new Vue({\n  el: '#example',\n  data: {\n    message: 'Hello'\n  },\n  computed: {\n    // 计算属性的 getter\n    reversedMessage: function () {\n      // `this` 指向 vm 实例\n      return this.message.split('').reverse().join('')\n    }\n  }\n})\n```\n\n计算属性和函数区别：计算属性是基于它们的依赖进行缓存的。只在相关依赖发生改变时它们才会重新求值。这就意味着只要 message 还没有发生改变，多次访问 reversedMessage 计算属性会立即返回之前的计算结果，而不必再次执行函数。\n\n计算属性setter\n\n```\ncomputed: {\n  fullName: {\n    // getter\n    get: function () {\n      return this.firstName + ' ' + this.lastName\n    },\n    // setter\n    set: function (newValue) {\n      var names = newValue.split(' ')\n      this.firstName = names[0]\n      this.lastName = names[names.length - 1]\n    }\n  }\n}\n```\n\n## Class 与 Style\n\n```\n<div class=\"static\"\n     v-bind:class=\"{ active: isActive, 'text-danger': hasError }\">\n</div>\n和如下 data：\n\ndata: {\n  isActive: true,\n  hasError: false\n}\n结果渲染为：\n\n<div class=\"static active\"></div>\n\n我们也可以在这里绑定一个返回对象的计算属性。这是一个常用且强大的模式：\n\n<div v-bind:class=\"classObject\"></div>\ndata: {\n  isActive: true,\n  error: null\n},\ncomputed: {\n  classObject: function () {\n    return {\n      active: this.isActive && !this.error,\n      'text-danger': this.error && this.error.type === 'fatal'\n    }\n  }\n}\n\n直接绑定到一个样式对象通常更好，这会让模板更清晰：\n\n<div v-bind:style=\"styleObject\"></div>\ndata: {\n  styleObject: {\n    color: 'red',\n    fontSize: '13px'\n  }\n}\n同样的，对象语法常常结合返回对象的计算属性使用。\n\n```\n","slug":"Vue基础","published":1,"updated":"2018-09-19T10:14:21.273Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmd4j97m0004tovawmhosjxs","content":"<p>ViewModel 使用Vue实例联系起HTML元素(View)和data(Model)<br>响应式 当data变化后会立即同步变化View<br>组件 所有视图可以视为以Vue实例为根的组件树，可以嵌套层叠，通过CSS控制布局和样式。封装为组件可提高抽象层次，方便复用</p>\n<h2 id=\"模板语法\"><a href=\"#模板语法\" class=\"headerlink\" title=\"模板语法\"></a>模板语法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; rawHtml &#125;&#125;</span><br><span class=\"line\">&lt;span v-html=&quot;rawHtml&quot;&gt;&lt;/span&gt;</span><br><span class=\"line\">v-bind:id=&quot;dynamicId&quot;</span><br><span class=\"line\">v-bind:disabled=&quot;isButtonDisabled&quot;</span><br><span class=\"line\">v-bind:id=&quot;&apos;list-&apos; + id&quot;</span><br><span class=\"line\">v-if=&quot;seen&quot;</span><br><span class=\"line\">v-on:click=&quot;doSomething&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">v-bind:href=&quot;url&quot;  缩写为  :href=&quot;url&quot;</span><br><span class=\"line\">v-on:click=&quot;doSomething&quot;  缩写为  @click=&quot;doSomething&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"计算属性\"><a href=\"#计算属性\" class=\"headerlink\" title=\"计算属性\"></a>计算属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// &#123;&#123; message.split(&apos;&apos;).reverse().join(&apos;&apos;) &#125;&#125;</span><br><span class=\"line\">&#123;&#123; reversedMessage &#125;&#125;</span><br><span class=\"line\">var vm = new Vue(&#123;</span><br><span class=\"line\">  el: &apos;#example&apos;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    message: &apos;Hello&apos;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    // 计算属性的 getter</span><br><span class=\"line\">    reversedMessage: function () &#123;</span><br><span class=\"line\">      // `this` 指向 vm 实例</span><br><span class=\"line\">      return this.message.split(&apos;&apos;).reverse().join(&apos;&apos;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>计算属性和函数区别：计算属性是基于它们的依赖进行缓存的。只在相关依赖发生改变时它们才会重新求值。这就意味着只要 message 还没有发生改变，多次访问 reversedMessage 计算属性会立即返回之前的计算结果，而不必再次执行函数。</p>\n<p>计算属性setter</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  fullName: &#123;</span><br><span class=\"line\">    // getter</span><br><span class=\"line\">    get: function () &#123;</span><br><span class=\"line\">      return this.firstName + &apos; &apos; + this.lastName</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // setter</span><br><span class=\"line\">    set: function (newValue) &#123;</span><br><span class=\"line\">      var names = newValue.split(&apos; &apos;)</span><br><span class=\"line\">      this.firstName = names[0]</span><br><span class=\"line\">      this.lastName = names[names.length - 1]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Class-与-Style\"><a href=\"#Class-与-Style\" class=\"headerlink\" title=\"Class 与 Style\"></a>Class 与 Style</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;static&quot;</span><br><span class=\"line\">     v-bind:class=&quot;&#123; active: isActive, &apos;text-danger&apos;: hasError &#125;&quot;&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">和如下 data：</span><br><span class=\"line\"></span><br><span class=\"line\">data: &#123;</span><br><span class=\"line\">  isActive: true,</span><br><span class=\"line\">  hasError: false</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">结果渲染为：</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;static active&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">我们也可以在这里绑定一个返回对象的计算属性。这是一个常用且强大的模式：</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div v-bind:class=&quot;classObject&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">data: &#123;</span><br><span class=\"line\">  isActive: true,</span><br><span class=\"line\">  error: null</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  classObject: function () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      active: this.isActive &amp;&amp; !this.error,</span><br><span class=\"line\">      &apos;text-danger&apos;: this.error &amp;&amp; this.error.type === &apos;fatal&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">直接绑定到一个样式对象通常更好，这会让模板更清晰：</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div v-bind:style=&quot;styleObject&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">data: &#123;</span><br><span class=\"line\">  styleObject: &#123;</span><br><span class=\"line\">    color: &apos;red&apos;,</span><br><span class=\"line\">    fontSize: &apos;13px&apos;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">同样的，对象语法常常结合返回对象的计算属性使用。</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>ViewModel 使用Vue实例联系起HTML元素(View)和data(Model)<br>响应式 当data变化后会立即同步变化View<br>组件 所有视图可以视为以Vue实例为根的组件树，可以嵌套层叠，通过CSS控制布局和样式。封装为组件可提高抽象层次，方便复用</p>\n<h2 id=\"模板语法\"><a href=\"#模板语法\" class=\"headerlink\" title=\"模板语法\"></a>模板语法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; rawHtml &#125;&#125;</span><br><span class=\"line\">&lt;span v-html=&quot;rawHtml&quot;&gt;&lt;/span&gt;</span><br><span class=\"line\">v-bind:id=&quot;dynamicId&quot;</span><br><span class=\"line\">v-bind:disabled=&quot;isButtonDisabled&quot;</span><br><span class=\"line\">v-bind:id=&quot;&apos;list-&apos; + id&quot;</span><br><span class=\"line\">v-if=&quot;seen&quot;</span><br><span class=\"line\">v-on:click=&quot;doSomething&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">v-bind:href=&quot;url&quot;  缩写为  :href=&quot;url&quot;</span><br><span class=\"line\">v-on:click=&quot;doSomething&quot;  缩写为  @click=&quot;doSomething&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"计算属性\"><a href=\"#计算属性\" class=\"headerlink\" title=\"计算属性\"></a>计算属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// &#123;&#123; message.split(&apos;&apos;).reverse().join(&apos;&apos;) &#125;&#125;</span><br><span class=\"line\">&#123;&#123; reversedMessage &#125;&#125;</span><br><span class=\"line\">var vm = new Vue(&#123;</span><br><span class=\"line\">  el: &apos;#example&apos;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    message: &apos;Hello&apos;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    // 计算属性的 getter</span><br><span class=\"line\">    reversedMessage: function () &#123;</span><br><span class=\"line\">      // `this` 指向 vm 实例</span><br><span class=\"line\">      return this.message.split(&apos;&apos;).reverse().join(&apos;&apos;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>计算属性和函数区别：计算属性是基于它们的依赖进行缓存的。只在相关依赖发生改变时它们才会重新求值。这就意味着只要 message 还没有发生改变，多次访问 reversedMessage 计算属性会立即返回之前的计算结果，而不必再次执行函数。</p>\n<p>计算属性setter</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  fullName: &#123;</span><br><span class=\"line\">    // getter</span><br><span class=\"line\">    get: function () &#123;</span><br><span class=\"line\">      return this.firstName + &apos; &apos; + this.lastName</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // setter</span><br><span class=\"line\">    set: function (newValue) &#123;</span><br><span class=\"line\">      var names = newValue.split(&apos; &apos;)</span><br><span class=\"line\">      this.firstName = names[0]</span><br><span class=\"line\">      this.lastName = names[names.length - 1]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Class-与-Style\"><a href=\"#Class-与-Style\" class=\"headerlink\" title=\"Class 与 Style\"></a>Class 与 Style</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;static&quot;</span><br><span class=\"line\">     v-bind:class=&quot;&#123; active: isActive, &apos;text-danger&apos;: hasError &#125;&quot;&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">和如下 data：</span><br><span class=\"line\"></span><br><span class=\"line\">data: &#123;</span><br><span class=\"line\">  isActive: true,</span><br><span class=\"line\">  hasError: false</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">结果渲染为：</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;static active&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">我们也可以在这里绑定一个返回对象的计算属性。这是一个常用且强大的模式：</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div v-bind:class=&quot;classObject&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">data: &#123;</span><br><span class=\"line\">  isActive: true,</span><br><span class=\"line\">  error: null</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">  classObject: function () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      active: this.isActive &amp;&amp; !this.error,</span><br><span class=\"line\">      &apos;text-danger&apos;: this.error &amp;&amp; this.error.type === &apos;fatal&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">直接绑定到一个样式对象通常更好，这会让模板更清晰：</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div v-bind:style=&quot;styleObject&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">data: &#123;</span><br><span class=\"line\">  styleObject: &#123;</span><br><span class=\"line\">    color: &apos;red&apos;,</span><br><span class=\"line\">    fontSize: &apos;13px&apos;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">同样的，对象语法常常结合返回对象的计算属性使用。</span><br></pre></td></tr></table></figure>\n"},{"title":"Vue入门","date":"2018-09-12T16:00:00.000Z","_content":"\n> 有基础的HTML+CSS+JS知识就阔以搞起了\n\n## Hello Vue —— 声明式渲染\n\n```js\n<html>\n\n<div id=\"app\">\n    Hello Vue, My name is xxx.\n</div>\n\n</html>\n```\n\n这是一个最简单的网页了，略去了网页其他不必要的细节，我打算据此引入Vue的使用。\n\n```js\n<html>\n\n<div id=\"app\">\n    Hello Vue, My name is {{ name }}.\n</div>\n\n<script src=\"https://unpkg.com/vue\"></script>\n<script>\n    var obj = new Vue({\n        el: '#app',\n        data: {\n            name: 'Biao'\n        }\n    })\n</script>\n\n</html>\n```\n\n这个代码很好懂，目的是用js动态填充`文档元素`里的{{name}}模板。\n\n从面向对象的角度来理解Vue的工作原理，那么这段代码最关键的一个词就是：new。就好像一首诗的“诗眼”一样。\n\n通过new创建了一个Vue对象实例，而这个对象将`文档元素`和`数据`联系在了一起。注意，Vue并非是简单地“模板替换”，在console里输入obj.name='Tony'，你会发现文档`响应式`的改变了，这意味着Vue对象`obj`维护着元素`#app`和其他Vue属性`data`之间的关系。\n\n再提一问：Vue为什么要这样维护？比用DOM维护有什么好处？答案是DOM将结点元素视为一个对象，而Vue将有结构的数据视为一个对象。用Vue修改name只需要obj.name='Tony'即可，而用DOM要先document.getElementById('app')再修改innerHTML。\n\n如果再深究一步：Vue怎样实现这样的维护？那所有的秘密都藏在`<script src=\"https://unpkg.com/vue\"></script>`这一行里了，恐怕只有阅读了源码才能清楚。\n\n## 条件与循环\n\n```html\n<div id=\"app\">\n    <p v-if=\"seen\">现在你看到我了</p>\n    <li v-for=\"todo in todos\">\n      {{ todo.text }}\n    </li>\n</div>\nvar obj = new Vue({\n  el: '#app',\n  data: {\n    seen: true,\n    todos: [\n      { text: '学习 JavaScript' },\n      { text: '学习 Vue' },\n      { text: '整个牛项目' }\n    ]\n  }\n})\n```\n\n## 速查手册\n\n```\nv-if=\"seen\"\nv-for=\"todo in todos\"\nv-on:click=\"reverseMessage\"    // 事件绑定\nv-model=\"message\"   // 表单数据绑定\nvar obj = new Vue({\n    el: '#app',\n    data: {\n        name: 'Biao',\n        seen: true,\n        todo: []\n    },\n    methods: {\n        reverseMessage: function () {\n            this.message = this.message.split('').reverse().join('')\n        }\n    }\n})\n```\n\n","source":"_posts/Vue入门.md","raw":"---\ntitle: Vue入门\ndate: 2018-09-13\ntags: ['Vue']\n---\n\n> 有基础的HTML+CSS+JS知识就阔以搞起了\n\n## Hello Vue —— 声明式渲染\n\n```js\n<html>\n\n<div id=\"app\">\n    Hello Vue, My name is xxx.\n</div>\n\n</html>\n```\n\n这是一个最简单的网页了，略去了网页其他不必要的细节，我打算据此引入Vue的使用。\n\n```js\n<html>\n\n<div id=\"app\">\n    Hello Vue, My name is {{ name }}.\n</div>\n\n<script src=\"https://unpkg.com/vue\"></script>\n<script>\n    var obj = new Vue({\n        el: '#app',\n        data: {\n            name: 'Biao'\n        }\n    })\n</script>\n\n</html>\n```\n\n这个代码很好懂，目的是用js动态填充`文档元素`里的{{name}}模板。\n\n从面向对象的角度来理解Vue的工作原理，那么这段代码最关键的一个词就是：new。就好像一首诗的“诗眼”一样。\n\n通过new创建了一个Vue对象实例，而这个对象将`文档元素`和`数据`联系在了一起。注意，Vue并非是简单地“模板替换”，在console里输入obj.name='Tony'，你会发现文档`响应式`的改变了，这意味着Vue对象`obj`维护着元素`#app`和其他Vue属性`data`之间的关系。\n\n再提一问：Vue为什么要这样维护？比用DOM维护有什么好处？答案是DOM将结点元素视为一个对象，而Vue将有结构的数据视为一个对象。用Vue修改name只需要obj.name='Tony'即可，而用DOM要先document.getElementById('app')再修改innerHTML。\n\n如果再深究一步：Vue怎样实现这样的维护？那所有的秘密都藏在`<script src=\"https://unpkg.com/vue\"></script>`这一行里了，恐怕只有阅读了源码才能清楚。\n\n## 条件与循环\n\n```html\n<div id=\"app\">\n    <p v-if=\"seen\">现在你看到我了</p>\n    <li v-for=\"todo in todos\">\n      {{ todo.text }}\n    </li>\n</div>\nvar obj = new Vue({\n  el: '#app',\n  data: {\n    seen: true,\n    todos: [\n      { text: '学习 JavaScript' },\n      { text: '学习 Vue' },\n      { text: '整个牛项目' }\n    ]\n  }\n})\n```\n\n## 速查手册\n\n```\nv-if=\"seen\"\nv-for=\"todo in todos\"\nv-on:click=\"reverseMessage\"    // 事件绑定\nv-model=\"message\"   // 表单数据绑定\nvar obj = new Vue({\n    el: '#app',\n    data: {\n        name: 'Biao',\n        seen: true,\n        todo: []\n    },\n    methods: {\n        reverseMessage: function () {\n            this.message = this.message.split('').reverse().join('')\n        }\n    }\n})\n```\n\n","slug":"Vue入门","published":1,"updated":"2018-09-19T11:45:10.053Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmd4j97o0005tovaqwbbka7f","content":"<blockquote>\n<p>有基础的HTML+CSS+JS知识就阔以搞起了</p>\n</blockquote>\n<h2 id=\"Hello-Vue-——-声明式渲染\"><a href=\"#Hello-Vue-——-声明式渲染\" class=\"headerlink\" title=\"Hello Vue —— 声明式渲染\"></a>Hello Vue —— 声明式渲染</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    Hello Vue, My name is xxx.</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>\n<p>这是一个最简单的网页了，略去了网页其他不必要的细节，我打算据此引入Vue的使用。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    Hello Vue, My name is &#123;&#123; name &#125;&#125;.</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script src=\"https:/</span><span class=\"regexp\">/unpkg.com/</span>vue<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"string\">    var obj = new Vue(&#123;</span></span><br><span class=\"line\"><span class=\"string\">        el: '#app',</span></span><br><span class=\"line\"><span class=\"string\">        data: &#123;</span></span><br><span class=\"line\"><span class=\"string\">            name: 'Biao'</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这个代码很好懂，目的是用js动态填充<code>文档元素</code>里的模板。</p>\n<p>从面向对象的角度来理解Vue的工作原理，那么这段代码最关键的一个词就是：new。就好像一首诗的“诗眼”一样。</p>\n<p>通过new创建了一个Vue对象实例，而这个对象将<code>文档元素</code>和<code>数据</code>联系在了一起。注意，Vue并非是简单地“模板替换”，在console里输入obj.name=’Tony’，你会发现文档<code>响应式</code>的改变了，这意味着Vue对象<code>obj</code>维护着元素<code>#app</code>和其他Vue属性<code>data</code>之间的关系。</p>\n<p>再提一问：Vue为什么要这样维护？比用DOM维护有什么好处？答案是DOM将结点元素视为一个对象，而Vue将有结构的数据视为一个对象。用Vue修改name只需要obj.name=’Tony’即可，而用DOM要先document.getElementById(‘app’)再修改innerHTML。</p>\n<p>如果再深究一步：Vue怎样实现这样的维护？那所有的秘密都藏在<code>&lt;script src=&quot;https://unpkg.com/vue&quot;&gt;&lt;/script&gt;</code>这一行里了，恐怕只有阅读了源码才能清楚。</p>\n<h2 id=\"条件与循环\"><a href=\"#条件与循环\" class=\"headerlink\" title=\"条件与循环\"></a>条件与循环</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"seen\"</span>&gt;</span>现在你看到我了<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"todo in todos\"</span>&gt;</span></span><br><span class=\"line\">      &#123;&#123; todo.text &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">var obj = new Vue(&#123;</span><br><span class=\"line\">  el: '#app',</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    seen: true,</span><br><span class=\"line\">    todos: [</span><br><span class=\"line\">      &#123; text: '学习 JavaScript' &#125;,</span><br><span class=\"line\">      &#123; text: '学习 Vue' &#125;,</span><br><span class=\"line\">      &#123; text: '整个牛项目' &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"速查手册\"><a href=\"#速查手册\" class=\"headerlink\" title=\"速查手册\"></a>速查手册</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v-if=&quot;seen&quot;</span><br><span class=\"line\">v-for=&quot;todo in todos&quot;</span><br><span class=\"line\">v-on:click=&quot;reverseMessage&quot;    // 事件绑定</span><br><span class=\"line\">v-model=&quot;message&quot;   // 表单数据绑定</span><br><span class=\"line\">var obj = new Vue(&#123;</span><br><span class=\"line\">    el: &apos;#app&apos;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">        name: &apos;Biao&apos;,</span><br><span class=\"line\">        seen: true,</span><br><span class=\"line\">        todo: []</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">        reverseMessage: function () &#123;</span><br><span class=\"line\">            this.message = this.message.split(&apos;&apos;).reverse().join(&apos;&apos;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>有基础的HTML+CSS+JS知识就阔以搞起了</p>\n</blockquote>\n<h2 id=\"Hello-Vue-——-声明式渲染\"><a href=\"#Hello-Vue-——-声明式渲染\" class=\"headerlink\" title=\"Hello Vue —— 声明式渲染\"></a>Hello Vue —— 声明式渲染</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    Hello Vue, My name is xxx.</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>\n<p>这是一个最简单的网页了，略去了网页其他不必要的细节，我打算据此引入Vue的使用。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    Hello Vue, My name is &#123;&#123; name &#125;&#125;.</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script src=\"https:/</span><span class=\"regexp\">/unpkg.com/</span>vue<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"string\">    var obj = new Vue(&#123;</span></span><br><span class=\"line\"><span class=\"string\">        el: '#app',</span></span><br><span class=\"line\"><span class=\"string\">        data: &#123;</span></span><br><span class=\"line\"><span class=\"string\">            name: 'Biao'</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">    &#125;)</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这个代码很好懂，目的是用js动态填充<code>文档元素</code>里的模板。</p>\n<p>从面向对象的角度来理解Vue的工作原理，那么这段代码最关键的一个词就是：new。就好像一首诗的“诗眼”一样。</p>\n<p>通过new创建了一个Vue对象实例，而这个对象将<code>文档元素</code>和<code>数据</code>联系在了一起。注意，Vue并非是简单地“模板替换”，在console里输入obj.name=’Tony’，你会发现文档<code>响应式</code>的改变了，这意味着Vue对象<code>obj</code>维护着元素<code>#app</code>和其他Vue属性<code>data</code>之间的关系。</p>\n<p>再提一问：Vue为什么要这样维护？比用DOM维护有什么好处？答案是DOM将结点元素视为一个对象，而Vue将有结构的数据视为一个对象。用Vue修改name只需要obj.name=’Tony’即可，而用DOM要先document.getElementById(‘app’)再修改innerHTML。</p>\n<p>如果再深究一步：Vue怎样实现这样的维护？那所有的秘密都藏在<code>&lt;script src=&quot;https://unpkg.com/vue&quot;&gt;&lt;/script&gt;</code>这一行里了，恐怕只有阅读了源码才能清楚。</p>\n<h2 id=\"条件与循环\"><a href=\"#条件与循环\" class=\"headerlink\" title=\"条件与循环\"></a>条件与循环</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"seen\"</span>&gt;</span>现在你看到我了<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"todo in todos\"</span>&gt;</span></span><br><span class=\"line\">      &#123;&#123; todo.text &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">var obj = new Vue(&#123;</span><br><span class=\"line\">  el: '#app',</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    seen: true,</span><br><span class=\"line\">    todos: [</span><br><span class=\"line\">      &#123; text: '学习 JavaScript' &#125;,</span><br><span class=\"line\">      &#123; text: '学习 Vue' &#125;,</span><br><span class=\"line\">      &#123; text: '整个牛项目' &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"速查手册\"><a href=\"#速查手册\" class=\"headerlink\" title=\"速查手册\"></a>速查手册</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v-if=&quot;seen&quot;</span><br><span class=\"line\">v-for=&quot;todo in todos&quot;</span><br><span class=\"line\">v-on:click=&quot;reverseMessage&quot;    // 事件绑定</span><br><span class=\"line\">v-model=&quot;message&quot;   // 表单数据绑定</span><br><span class=\"line\">var obj = new Vue(&#123;</span><br><span class=\"line\">    el: &apos;#app&apos;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">        name: &apos;Biao&apos;,</span><br><span class=\"line\">        seen: true,</span><br><span class=\"line\">        todo: []</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">        reverseMessage: function () &#123;</span><br><span class=\"line\">            this.message = this.message.split(&apos;&apos;).reverse().join(&apos;&apos;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n"},{"title":"《UML精粹》读书笔记","date":"2018-09-13T16:00:00.000Z","_content":"\n# 引言\n\n## UML使用方式\n\n> UML在软件开发中作用的实质是人们不同的使用方式。\n\n作者在引言第一节就抛出了本书关键的一个问题：你想使用好UML吗？先问问自己你为什么要用UML，你期望用UML做什么？\n\nUML三种使用方法：\n1. 草图 UML as sketch\n2. 蓝图 UML as blueprint\n3. 编程语言 UML as programing language\n\n草图的实质是选择，用于确定一个方案值不值得去做，而不关心具体怎么做。蓝图的实质是描述，并且尽可能精确细节的描述。草图是探究性的，蓝图是定义性的。\n\n用作编程语言指的是将UML直接编译为可执行的程序代码，这自然要求比蓝图更精确的描述能力。\n\n另一个看待UML的角度是：用UML对什么建模？\n1. 软件视角：对软件建模，UML成分直接映射为软件成分\n2. 概念视角：对概念建模，UML成分只是对概念的表述，至于软件怎么实现，另当别论\n\nUML到底用作什么，UML和设计的关系为何？引起很多争议。作者随后表明自己立场，也是我赞同的立场：\n**UML用作草图，可用于软件视角和概念视角。不赞同用于蓝图和编程语言。**\n\n> 图示法的魅力在于直观，而不是形式定义。\n\n## 什么才是合法的UML\n\nUML具有指定性规则还是描述性规则？换句话说，UML标准是按照某个机构某个文档说的算，还是使用者说的算？这个问题乍一看有点傻，其实是因为UML标准繁杂不统一导致的。\n\n> 如果你是一名草图绘制人员或一名蓝图绘制人员，不必更多强调有合法的UML，更为重要的是，要对你的系统有一个好的设计。\n\n**把精力更多的用在如何设计一个好的系统，而非拘泥于标准。**\n\n**如果有非UML图更适合，feel free to use it.**\n\n## 何处着手使用UML\n\n**从类图和顺序图着手了解UML，再根据需要去了解更高级的UML**\n\n> 没有人能了解UML的全部，你应该寻求为你和你的同事们的工作的UML子集。\n\n## 更多资料\n\nUML模式及其应用，larman，Applying UML and Patterns\nRumbaugh，UML Reference\n重构，Martin Fowler\n设计模式\n\n# 过程\n\n作者推崇的过程：\n\n迭代风格、阶段提交、时间框定、回归测试、重构、连续集成、响应变更、迭代回顾\n\n\t敏捷过程\n\t\t极限编程（XP）\n\t\tScrum\n\t\tCrystal\n\t\tDSDM\n\tRational统一过程（RUP）\n\n\n# 类图\n# 顺序图\n# 对象图\n# 包图\n# 部署图\n# 用例图\n# 状态机图\n# 活动图\n# 通信图\n# 构件图\n# 协作图\n","source":"_posts/《UML精粹》读书笔记.md","raw":"---\ntitle: 《UML精粹》读书笔记\ndate: 2018-09-14 \ntags:\n---\n\n# 引言\n\n## UML使用方式\n\n> UML在软件开发中作用的实质是人们不同的使用方式。\n\n作者在引言第一节就抛出了本书关键的一个问题：你想使用好UML吗？先问问自己你为什么要用UML，你期望用UML做什么？\n\nUML三种使用方法：\n1. 草图 UML as sketch\n2. 蓝图 UML as blueprint\n3. 编程语言 UML as programing language\n\n草图的实质是选择，用于确定一个方案值不值得去做，而不关心具体怎么做。蓝图的实质是描述，并且尽可能精确细节的描述。草图是探究性的，蓝图是定义性的。\n\n用作编程语言指的是将UML直接编译为可执行的程序代码，这自然要求比蓝图更精确的描述能力。\n\n另一个看待UML的角度是：用UML对什么建模？\n1. 软件视角：对软件建模，UML成分直接映射为软件成分\n2. 概念视角：对概念建模，UML成分只是对概念的表述，至于软件怎么实现，另当别论\n\nUML到底用作什么，UML和设计的关系为何？引起很多争议。作者随后表明自己立场，也是我赞同的立场：\n**UML用作草图，可用于软件视角和概念视角。不赞同用于蓝图和编程语言。**\n\n> 图示法的魅力在于直观，而不是形式定义。\n\n## 什么才是合法的UML\n\nUML具有指定性规则还是描述性规则？换句话说，UML标准是按照某个机构某个文档说的算，还是使用者说的算？这个问题乍一看有点傻，其实是因为UML标准繁杂不统一导致的。\n\n> 如果你是一名草图绘制人员或一名蓝图绘制人员，不必更多强调有合法的UML，更为重要的是，要对你的系统有一个好的设计。\n\n**把精力更多的用在如何设计一个好的系统，而非拘泥于标准。**\n\n**如果有非UML图更适合，feel free to use it.**\n\n## 何处着手使用UML\n\n**从类图和顺序图着手了解UML，再根据需要去了解更高级的UML**\n\n> 没有人能了解UML的全部，你应该寻求为你和你的同事们的工作的UML子集。\n\n## 更多资料\n\nUML模式及其应用，larman，Applying UML and Patterns\nRumbaugh，UML Reference\n重构，Martin Fowler\n设计模式\n\n# 过程\n\n作者推崇的过程：\n\n迭代风格、阶段提交、时间框定、回归测试、重构、连续集成、响应变更、迭代回顾\n\n\t敏捷过程\n\t\t极限编程（XP）\n\t\tScrum\n\t\tCrystal\n\t\tDSDM\n\tRational统一过程（RUP）\n\n\n# 类图\n# 顺序图\n# 对象图\n# 包图\n# 部署图\n# 用例图\n# 状态机图\n# 活动图\n# 通信图\n# 构件图\n# 协作图\n","slug":"《UML精粹》读书笔记","published":1,"updated":"2018-09-19T15:41:07.123Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmd4j97q0006tova1fl385oe","content":"<h1 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h1><h2 id=\"UML使用方式\"><a href=\"#UML使用方式\" class=\"headerlink\" title=\"UML使用方式\"></a>UML使用方式</h2><blockquote>\n<p>UML在软件开发中作用的实质是人们不同的使用方式。</p>\n</blockquote>\n<p>作者在引言第一节就抛出了本书关键的一个问题：你想使用好UML吗？先问问自己你为什么要用UML，你期望用UML做什么？</p>\n<p>UML三种使用方法：</p>\n<ol>\n<li>草图 UML as sketch</li>\n<li>蓝图 UML as blueprint</li>\n<li>编程语言 UML as programing language</li>\n</ol>\n<p>草图的实质是选择，用于确定一个方案值不值得去做，而不关心具体怎么做。蓝图的实质是描述，并且尽可能精确细节的描述。草图是探究性的，蓝图是定义性的。</p>\n<p>用作编程语言指的是将UML直接编译为可执行的程序代码，这自然要求比蓝图更精确的描述能力。</p>\n<p>另一个看待UML的角度是：用UML对什么建模？</p>\n<ol>\n<li>软件视角：对软件建模，UML成分直接映射为软件成分</li>\n<li>概念视角：对概念建模，UML成分只是对概念的表述，至于软件怎么实现，另当别论</li>\n</ol>\n<p>UML到底用作什么，UML和设计的关系为何？引起很多争议。作者随后表明自己立场，也是我赞同的立场：<br><strong>UML用作草图，可用于软件视角和概念视角。不赞同用于蓝图和编程语言。</strong></p>\n<blockquote>\n<p>图示法的魅力在于直观，而不是形式定义。</p>\n</blockquote>\n<h2 id=\"什么才是合法的UML\"><a href=\"#什么才是合法的UML\" class=\"headerlink\" title=\"什么才是合法的UML\"></a>什么才是合法的UML</h2><p>UML具有指定性规则还是描述性规则？换句话说，UML标准是按照某个机构某个文档说的算，还是使用者说的算？这个问题乍一看有点傻，其实是因为UML标准繁杂不统一导致的。</p>\n<blockquote>\n<p>如果你是一名草图绘制人员或一名蓝图绘制人员，不必更多强调有合法的UML，更为重要的是，要对你的系统有一个好的设计。</p>\n</blockquote>\n<p><strong>把精力更多的用在如何设计一个好的系统，而非拘泥于标准。</strong></p>\n<p><strong>如果有非UML图更适合，feel free to use it.</strong></p>\n<h2 id=\"何处着手使用UML\"><a href=\"#何处着手使用UML\" class=\"headerlink\" title=\"何处着手使用UML\"></a>何处着手使用UML</h2><p><strong>从类图和顺序图着手了解UML，再根据需要去了解更高级的UML</strong></p>\n<blockquote>\n<p>没有人能了解UML的全部，你应该寻求为你和你的同事们的工作的UML子集。</p>\n</blockquote>\n<h2 id=\"更多资料\"><a href=\"#更多资料\" class=\"headerlink\" title=\"更多资料\"></a>更多资料</h2><p>UML模式及其应用，larman，Applying UML and Patterns<br>Rumbaugh，UML Reference<br>重构，Martin Fowler<br>设计模式</p>\n<h1 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h1><p>作者推崇的过程：</p>\n<p>迭代风格、阶段提交、时间框定、回归测试、重构、连续集成、响应变更、迭代回顾</p>\n<pre><code>敏捷过程\n    极限编程（XP）\n    Scrum\n    Crystal\n    DSDM\nRational统一过程（RUP）\n</code></pre><h1 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h1><h1 id=\"顺序图\"><a href=\"#顺序图\" class=\"headerlink\" title=\"顺序图\"></a>顺序图</h1><h1 id=\"对象图\"><a href=\"#对象图\" class=\"headerlink\" title=\"对象图\"></a>对象图</h1><h1 id=\"包图\"><a href=\"#包图\" class=\"headerlink\" title=\"包图\"></a>包图</h1><h1 id=\"部署图\"><a href=\"#部署图\" class=\"headerlink\" title=\"部署图\"></a>部署图</h1><h1 id=\"用例图\"><a href=\"#用例图\" class=\"headerlink\" title=\"用例图\"></a>用例图</h1><h1 id=\"状态机图\"><a href=\"#状态机图\" class=\"headerlink\" title=\"状态机图\"></a>状态机图</h1><h1 id=\"活动图\"><a href=\"#活动图\" class=\"headerlink\" title=\"活动图\"></a>活动图</h1><h1 id=\"通信图\"><a href=\"#通信图\" class=\"headerlink\" title=\"通信图\"></a>通信图</h1><h1 id=\"构件图\"><a href=\"#构件图\" class=\"headerlink\" title=\"构件图\"></a>构件图</h1><h1 id=\"协作图\"><a href=\"#协作图\" class=\"headerlink\" title=\"协作图\"></a>协作图</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h1><h2 id=\"UML使用方式\"><a href=\"#UML使用方式\" class=\"headerlink\" title=\"UML使用方式\"></a>UML使用方式</h2><blockquote>\n<p>UML在软件开发中作用的实质是人们不同的使用方式。</p>\n</blockquote>\n<p>作者在引言第一节就抛出了本书关键的一个问题：你想使用好UML吗？先问问自己你为什么要用UML，你期望用UML做什么？</p>\n<p>UML三种使用方法：</p>\n<ol>\n<li>草图 UML as sketch</li>\n<li>蓝图 UML as blueprint</li>\n<li>编程语言 UML as programing language</li>\n</ol>\n<p>草图的实质是选择，用于确定一个方案值不值得去做，而不关心具体怎么做。蓝图的实质是描述，并且尽可能精确细节的描述。草图是探究性的，蓝图是定义性的。</p>\n<p>用作编程语言指的是将UML直接编译为可执行的程序代码，这自然要求比蓝图更精确的描述能力。</p>\n<p>另一个看待UML的角度是：用UML对什么建模？</p>\n<ol>\n<li>软件视角：对软件建模，UML成分直接映射为软件成分</li>\n<li>概念视角：对概念建模，UML成分只是对概念的表述，至于软件怎么实现，另当别论</li>\n</ol>\n<p>UML到底用作什么，UML和设计的关系为何？引起很多争议。作者随后表明自己立场，也是我赞同的立场：<br><strong>UML用作草图，可用于软件视角和概念视角。不赞同用于蓝图和编程语言。</strong></p>\n<blockquote>\n<p>图示法的魅力在于直观，而不是形式定义。</p>\n</blockquote>\n<h2 id=\"什么才是合法的UML\"><a href=\"#什么才是合法的UML\" class=\"headerlink\" title=\"什么才是合法的UML\"></a>什么才是合法的UML</h2><p>UML具有指定性规则还是描述性规则？换句话说，UML标准是按照某个机构某个文档说的算，还是使用者说的算？这个问题乍一看有点傻，其实是因为UML标准繁杂不统一导致的。</p>\n<blockquote>\n<p>如果你是一名草图绘制人员或一名蓝图绘制人员，不必更多强调有合法的UML，更为重要的是，要对你的系统有一个好的设计。</p>\n</blockquote>\n<p><strong>把精力更多的用在如何设计一个好的系统，而非拘泥于标准。</strong></p>\n<p><strong>如果有非UML图更适合，feel free to use it.</strong></p>\n<h2 id=\"何处着手使用UML\"><a href=\"#何处着手使用UML\" class=\"headerlink\" title=\"何处着手使用UML\"></a>何处着手使用UML</h2><p><strong>从类图和顺序图着手了解UML，再根据需要去了解更高级的UML</strong></p>\n<blockquote>\n<p>没有人能了解UML的全部，你应该寻求为你和你的同事们的工作的UML子集。</p>\n</blockquote>\n<h2 id=\"更多资料\"><a href=\"#更多资料\" class=\"headerlink\" title=\"更多资料\"></a>更多资料</h2><p>UML模式及其应用，larman，Applying UML and Patterns<br>Rumbaugh，UML Reference<br>重构，Martin Fowler<br>设计模式</p>\n<h1 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h1><p>作者推崇的过程：</p>\n<p>迭代风格、阶段提交、时间框定、回归测试、重构、连续集成、响应变更、迭代回顾</p>\n<pre><code>敏捷过程\n    极限编程（XP）\n    Scrum\n    Crystal\n    DSDM\nRational统一过程（RUP）\n</code></pre><h1 id=\"类图\"><a href=\"#类图\" class=\"headerlink\" title=\"类图\"></a>类图</h1><h1 id=\"顺序图\"><a href=\"#顺序图\" class=\"headerlink\" title=\"顺序图\"></a>顺序图</h1><h1 id=\"对象图\"><a href=\"#对象图\" class=\"headerlink\" title=\"对象图\"></a>对象图</h1><h1 id=\"包图\"><a href=\"#包图\" class=\"headerlink\" title=\"包图\"></a>包图</h1><h1 id=\"部署图\"><a href=\"#部署图\" class=\"headerlink\" title=\"部署图\"></a>部署图</h1><h1 id=\"用例图\"><a href=\"#用例图\" class=\"headerlink\" title=\"用例图\"></a>用例图</h1><h1 id=\"状态机图\"><a href=\"#状态机图\" class=\"headerlink\" title=\"状态机图\"></a>状态机图</h1><h1 id=\"活动图\"><a href=\"#活动图\" class=\"headerlink\" title=\"活动图\"></a>活动图</h1><h1 id=\"通信图\"><a href=\"#通信图\" class=\"headerlink\" title=\"通信图\"></a>通信图</h1><h1 id=\"构件图\"><a href=\"#构件图\" class=\"headerlink\" title=\"构件图\"></a>构件图</h1><h1 id=\"协作图\"><a href=\"#协作图\" class=\"headerlink\" title=\"协作图\"></a>协作图</h1>"},{"title":"杂谈","date":"2018-09-10T09:11:29.000Z","_content":"\n开学一周了，国创的事情已经告一段落，以一个学生的身份来说，我的任务首先是把课程过了。这个学期有机器学习、Web开发、信息安全、图形学、UML、需求分析、大数据、多媒体、DirectX这十门课，每天两节课，周末空闲。如何安排这空闲的大半时间？\n\n如我前两年一般，把大部分时间用到课业学习已经不现实。即使我在这些课花很多时间也不一定就能学好——我并不都感兴趣，何况不能指望30个小时胡吹和稀稀零零的作业就能学好十门课。我必须有所选择，对于机器学习和Web开发我比较感兴趣，就应当多下功夫，至于其他课程，按部就班通过就好。\n\n除了上课，还想做点实际的，这是我真正的兴趣所在。\n1. 升级一下Cqueue，加一些类似分享和笔记的功能；\n2. 升级一下Note，加一个云同步、指纹解锁；\n3. 做一个手机端的Shell，用来做自己的桌面，类似Aris Launcher那样，最好还能支持一些脚本\n\n这些小玩意儿上不得台面，满足自己而已，但我乐意去做。\n\n昨天读了一篇爱默生的《随想录》，平实的语言如此细腻又深入人心，对我很大安慰。昨晚睡得早，今天非常精神，正想改一改Cqueue，想到了解一下Mongoose，逛到@atian25的博客，又逛到Coolshell.cn，非常佩服膜拜，把博客在手机上用RSS订阅了，留着以后翻看。\n\n第一次写博客，跟写日记很不一样，要发出来就是为了分享一些想法或者经受指点，总要受点束缚，太个人的话和发牢骚的话就删删改改，写了半个多小时。文笔还要练呀。希望以后多分享一些技术的想法，希望学期结束不会对自己失望吧。\n","source":"_posts/杂谈.md","raw":"---\ntitle: 杂谈\ndate: 2018-09-10 17:11:29\ntags: ['瞎扯']\n---\n\n开学一周了，国创的事情已经告一段落，以一个学生的身份来说，我的任务首先是把课程过了。这个学期有机器学习、Web开发、信息安全、图形学、UML、需求分析、大数据、多媒体、DirectX这十门课，每天两节课，周末空闲。如何安排这空闲的大半时间？\n\n如我前两年一般，把大部分时间用到课业学习已经不现实。即使我在这些课花很多时间也不一定就能学好——我并不都感兴趣，何况不能指望30个小时胡吹和稀稀零零的作业就能学好十门课。我必须有所选择，对于机器学习和Web开发我比较感兴趣，就应当多下功夫，至于其他课程，按部就班通过就好。\n\n除了上课，还想做点实际的，这是我真正的兴趣所在。\n1. 升级一下Cqueue，加一些类似分享和笔记的功能；\n2. 升级一下Note，加一个云同步、指纹解锁；\n3. 做一个手机端的Shell，用来做自己的桌面，类似Aris Launcher那样，最好还能支持一些脚本\n\n这些小玩意儿上不得台面，满足自己而已，但我乐意去做。\n\n昨天读了一篇爱默生的《随想录》，平实的语言如此细腻又深入人心，对我很大安慰。昨晚睡得早，今天非常精神，正想改一改Cqueue，想到了解一下Mongoose，逛到@atian25的博客，又逛到Coolshell.cn，非常佩服膜拜，把博客在手机上用RSS订阅了，留着以后翻看。\n\n第一次写博客，跟写日记很不一样，要发出来就是为了分享一些想法或者经受指点，总要受点束缚，太个人的话和发牢骚的话就删删改改，写了半个多小时。文笔还要练呀。希望以后多分享一些技术的想法，希望学期结束不会对自己失望吧。\n","slug":"杂谈","published":1,"updated":"2018-09-19T15:40:40.582Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmd4j9830009tovan88rxzie","content":"<p>开学一周了，国创的事情已经告一段落，以一个学生的身份来说，我的任务首先是把课程过了。这个学期有机器学习、Web开发、信息安全、图形学、UML、需求分析、大数据、多媒体、DirectX这十门课，每天两节课，周末空闲。如何安排这空闲的大半时间？</p>\n<p>如我前两年一般，把大部分时间用到课业学习已经不现实。即使我在这些课花很多时间也不一定就能学好——我并不都感兴趣，何况不能指望30个小时胡吹和稀稀零零的作业就能学好十门课。我必须有所选择，对于机器学习和Web开发我比较感兴趣，就应当多下功夫，至于其他课程，按部就班通过就好。</p>\n<p>除了上课，还想做点实际的，这是我真正的兴趣所在。</p>\n<ol>\n<li>升级一下Cqueue，加一些类似分享和笔记的功能；</li>\n<li>升级一下Note，加一个云同步、指纹解锁；</li>\n<li>做一个手机端的Shell，用来做自己的桌面，类似Aris Launcher那样，最好还能支持一些脚本</li>\n</ol>\n<p>这些小玩意儿上不得台面，满足自己而已，但我乐意去做。</p>\n<p>昨天读了一篇爱默生的《随想录》，平实的语言如此细腻又深入人心，对我很大安慰。昨晚睡得早，今天非常精神，正想改一改Cqueue，想到了解一下Mongoose，逛到@atian25的博客，又逛到Coolshell.cn，非常佩服膜拜，把博客在手机上用RSS订阅了，留着以后翻看。</p>\n<p>第一次写博客，跟写日记很不一样，要发出来就是为了分享一些想法或者经受指点，总要受点束缚，太个人的话和发牢骚的话就删删改改，写了半个多小时。文笔还要练呀。希望以后多分享一些技术的想法，希望学期结束不会对自己失望吧。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>开学一周了，国创的事情已经告一段落，以一个学生的身份来说，我的任务首先是把课程过了。这个学期有机器学习、Web开发、信息安全、图形学、UML、需求分析、大数据、多媒体、DirectX这十门课，每天两节课，周末空闲。如何安排这空闲的大半时间？</p>\n<p>如我前两年一般，把大部分时间用到课业学习已经不现实。即使我在这些课花很多时间也不一定就能学好——我并不都感兴趣，何况不能指望30个小时胡吹和稀稀零零的作业就能学好十门课。我必须有所选择，对于机器学习和Web开发我比较感兴趣，就应当多下功夫，至于其他课程，按部就班通过就好。</p>\n<p>除了上课，还想做点实际的，这是我真正的兴趣所在。</p>\n<ol>\n<li>升级一下Cqueue，加一些类似分享和笔记的功能；</li>\n<li>升级一下Note，加一个云同步、指纹解锁；</li>\n<li>做一个手机端的Shell，用来做自己的桌面，类似Aris Launcher那样，最好还能支持一些脚本</li>\n</ol>\n<p>这些小玩意儿上不得台面，满足自己而已，但我乐意去做。</p>\n<p>昨天读了一篇爱默生的《随想录》，平实的语言如此细腻又深入人心，对我很大安慰。昨晚睡得早，今天非常精神，正想改一改Cqueue，想到了解一下Mongoose，逛到@atian25的博客，又逛到Coolshell.cn，非常佩服膜拜，把博客在手机上用RSS订阅了，留着以后翻看。</p>\n<p>第一次写博客，跟写日记很不一样，要发出来就是为了分享一些想法或者经受指点，总要受点束缚，太个人的话和发牢骚的话就删删改改，写了半个多小时。文笔还要练呀。希望以后多分享一些技术的想法，希望学期结束不会对自己失望吧。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjmd4j97o0005tovaqwbbka7f","tag_id":"cjmd4j97s0007tovabiagdxcs","_id":"cjmd4j97w0008tova0cd5olfm"},{"post_id":"cjmd4j9830009tovan88rxzie","tag_id":"cjmd4j984000atovarhwp30du","_id":"cjmd4j985000btovaktej38r4"}],"Tag":[{"name":"Vue","_id":"cjmd4j97s0007tovabiagdxcs"},{"name":"瞎扯","_id":"cjmd4j984000atovarhwp30du"}]}}